// <auto-generated />
using System;
using FeedForwardBusinessEntities.EntityContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeedForwardBusinessEntities.Migrations
{
    [DbContext(typeof(FeedForwardContext))]
    partial class FeedForwardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.DesignationLevel", b =>
                {
                    b.Property<int>("DesignationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DesignationID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("DesignationID");

                    b.ToTable("DesignationLevels");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.FeedBackCaption", b =>
                {
                    b.Property<int>("FCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FCID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FCDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("FCID");

                    b.ToTable("FeedbackCaptions");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.FeedBackCategoryLevel", b =>
                {
                    b.Property<int>("FCLID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FCLID"), 1L, 1);

                    b.Property<string>("CreadtedBy")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("FCLDescription")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime");

                    b.HasKey("FCLID");

                    b.ToTable("FeedBackCategoryLevels");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.FeedbackSchedulingDetail", b =>
                {
                    b.Property<long>("SchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SchID"), 1L, 1);

                    b.Property<string>("FComment")
                        .IsRequired()
                        .HasColumnType("varchar(5000)");

                    b.Property<int>("FSID")
                        .HasColumnType("int");

                    b.Property<string>("FeedBackBy")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FeedBackTo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Fstatus")
                        .HasColumnType("bit");

                    b.HasKey("SchID");

                    b.ToTable("FeedbackScheduingDetails");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.FeedbackSession", b =>
                {
                    b.Property<int>("FSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FSID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FSDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("FSID");

                    b.ToTable("FeedbackSessions");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.LevelDetail", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("LevelDescription")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime");

                    b.HasKey("LevelID");

                    b.ToTable("LevelDetails");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.QuestionDetail", b =>
                {
                    b.Property<int>("QID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("DateTime");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("QID");

                    b.ToTable("QuestionDetails");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.RoleDetail", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleID");

                    b.ToTable("RoleDetails");
                });

            modelBuilder.Entity("FeedForwardBusinessEntities.EntityModels.UserDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DesignationID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmpID")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Mobile")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("PasswordChangeDate")
                        .HasColumnType("datetime");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("UserDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
